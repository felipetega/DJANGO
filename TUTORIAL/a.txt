PART 5
Let’s look at some of these more closely.

There’s a problem here,
%HOMEPATH%\.virtualenvs\djangodev\Scripts\activate.bat

STARTPROJECT
(in the directory you want)
django-admin startproject mysite

RUNSERVER
(in manage.py directory)
py manage.py runserver //NÃO USAR QUANDO EM PRODUÇÃO, SOMENTE DURANTE O DESENVOLVIMENTO

CREATE YOUR APP
(in manage.py directory)
py manage.py startapp polls

VERIFY IT'S WORKING
py manage.py runserver

CREATE THE TABLES IN DATABASE
py manage.py migrate

CREATE NEW MODELS
py manage.py makemigrations polls

RUN MIGRATIONS
The sqlmigrate command doesn’t actually run the migration on your database - instead, it prints it to the screen so that you can see what SQL Django thinks is required
py manage.py sqlmigrate polls 0001

CREATE MODELS IN DB
py manage.py migrate

PLAY API
py manage.py shell

CREATE ADMIN USER
py manage.py createsuperuser

START THE DEVELOPMENT SERVER
py manage.py runserver

TESTING MANUALLY
py manage.py shell

AUTOMATED TESTS
py manage.py test polls

1.
3 STEP GUIDE to making model changes:

Change your models (in models.py).
Run python manage.py makemigrations to create migrations for those changes
Run python manage.py migrate to apply those changes to the database.

2.
It’s important to add __str__() methods to your models, not only for your own convenience when dealing with the interactive prompt, but also because objects’ representations are used throughout Django’s automatically-generated admin.

Note AVOID RACE CONDITIONS

The code for our vote() view does have a small problem. It first gets the selected_choice object from the database, then computes the new value of votes, and then saves it back to the database. If two users of your website try to vote at exactly the same time, this might go wrong: The same value, let’s say 42, will be retrieved for votes. Then, for both users the new value of 43 is computed and saved, but 44 would be the expected value.

This is called a race condition. If you are interested, you can read Avoiding race conditions using F() to learn how you can solve this issue.

https://docs.djangoproject.com/en/4.1/ref/models/expressions/#avoiding-race-conditions-using-f

Test-driven development

THE DJANGO TEST CLIENT
py manage.py shell
from django.test.utils import setup_test_environment
setup_test_environment()
from django.test import Client
client = Client()